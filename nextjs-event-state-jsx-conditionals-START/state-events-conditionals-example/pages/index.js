import { useState } from "react";

import { MOVIE_LIST } from "../utils/movies";

import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import Alert from "@mui/material/Alert";
import Button from "@mui/material/Button";
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";
import TextField from "@mui/material/TextField";
import Typography from "@mui/material/Typography";

import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemText from "@mui/material/ListItemText";
import SimpleLisItem from "./state-event-condition/components/SimpleListItem";

export default function Home() {
  const [search, setSearch] = useState("");
  const [year, setYear] = useState("");
  const [movies, setMovies] = useState(MOVIE_LIST);
  const [errorMessage, setErrorMessage] = useState("");

  const handleSubmit = (event) => {
    event.preventDefault();
    let isValid = validate();

    if (isValid) {
      filterMovies();
    } else {
      setMovies([]); //this is going to show no results
    }

    filterMovies();
  };

  const validate = () => {
    //return true if valid
    //false if not valid

    //if it's empty let's just exit early
    if (year.trim().length === 0) {
      setErrorMessage("");
      return true;
    }

    if (isNaN(year)) {
      setErrorMessage(`"${year}" is not a valid year`);
      return false;
    }

    

    // the default is going to be valid
    //if it hits this point in the function.

    setErrorMessage("");
    return true;
  };

  const filterMovies = () => {
    //make a copy  of original array
    let filteredMovies = [...MOVIE_LIST];
    //check that the search isn't empty
    if (search.trim() != "") {
      //use my knowladge of filter to filter the array
      filteredMovies = filteredMovies.filter((movie) => {
        //setMovies to my new array.
        let lowerMovie = movie.name.toLocaleLowerCase();
        let LowerSearch = search.toLocaleLowerCase();
        return lowerMovie.includes(LowerSearch);
      });
    }
    //setMovies to my new array.
    setMovies(filteredMovies);
  };
  return (
    <div>
      <Head>
        <title>Our Movie App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
      </Head>

      <main>
        <Container>
          <Typography
            variant="h2"
            component="h2"
            style={{ textAlign: "center" }}
          >
            Movies
          </Typography>
          <form onSubmit={handleSubmit} style={{ width: "100%" }}>
            <Grid container spacing={2}>
              <Grid item xs={6}>
                <TextField
                  id="search-field"
                  label="search..."
                  variant="standard"
                  sx={{ width: "100%" }}
                  value={search}
                  onChange={(event) => setSearch(event.target.value)}
                />
              </Grid>
              <Grid item xs={4}>
                <TextField
                  id="year-field"
                  label="year"
                  variant="standard"
                  sx={{ width: "100%" }}
                  value={year}
                  onChange={(event) => setYear(event.target.value)}
                />
              </Grid>
              <Grid item xs={2}>
                <Button type="submit" variant="contained">
                  Filter
                </Button>
              </Grid>
              <Grid item xs={10}>
                {/* Add the error message here*/}
                {errorMessage !== "" && (
                  <Alert severity="error">{errorMessage}</Alert>
                )}
                {/* {movies.length !=0}
                 <SimpleLisItem text={  } */}
              </Grid>
            </Grid>
          </form>
          <List sx={{ width: `100%` }}>
            {movies.map((movieData, index) => {
              return (
                <SimpleLisItem
                  key={index}
                  text={`${movieData.name} (${movieData.year})`}
                />
              );
            })}
          </List>
        </Container>
      </main>
    </div>
  );
}
